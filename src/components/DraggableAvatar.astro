---
import DynamicImage from "./DynamicImage.astro";
---

<DynamicImage
  id="draggable-avatar"
  src="about/profile.avif"
  alt="Avatar of Leopold Lemmermann"
  loading="eager"
/>

<style>
  #draggable-avatar {
    @apply w-10 h-10 absolute z-50 cursor-grab transition-transform duration-500 ease-in-out rounded-full object-cover shadow-[0_8px_20px_rgba(0,0,0,0.6)];
  }

  #draggable-avatar.moving-back {
    transition: all 0.4s ease-in-out;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const avatar = document.getElementById("draggable-avatar");

    if (!avatar) return;

    let dragging = false;
    let offsetX = 0,
      offsetY = 0;
    let startLeft = 0,
      startTop = 0;
    let returnTimer: any = null;

    function startDrag(x, y) {
      dragging = true;
      avatar.classList.remove("moving-back");
      avatar.style.position = "fixed";
      startLeft = avatar.offsetLeft;
      startTop = avatar.offsetTop;
      offsetX = x - startLeft;
      offsetY = y - startTop;
      avatar.style.left = startLeft + "px";
      avatar.style.top = startTop + "px";
    }

    function moveDrag(x, y) {
      if (!dragging) return;
      avatar.style.left = `${x - offsetX}px`;
      avatar.style.top = `${y - offsetY}px`;
    }

    function endDrag() {
      if (!dragging) return;
      dragging = false;
      if (returnTimer) clearTimeout(returnTimer);
      returnTimer = setTimeout(() => {
        avatar.classList.add("moving-back");
        avatar.style.left = startLeft + "px";
        avatar.style.top = startTop + "px";
      }, 1000);
    }

    avatar.addEventListener("mousedown", (e) => {
      e.preventDefault();
      startDrag(e.clientX, e.clientY);
    });

    document.addEventListener("mousemove", (e) =>
      moveDrag(e.clientX, e.clientY)
    );
    document.addEventListener("mouseup", endDrag);

    avatar.addEventListener("touchstart", (e) => {
      e.preventDefault();
      const t = e.touches[0];
      startDrag(t.clientX, t.clientY);
    });

    document.addEventListener(
      "touchmove",
      (e) => {
        const t = e.touches[0];
        moveDrag(t.clientX, t.clientY);
      },
      { passive: true }
    );

    document.addEventListener("touchend", endDrag);
    document.addEventListener("touchcancel", endDrag);
  });
</script>
