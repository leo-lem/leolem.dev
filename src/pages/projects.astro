---
import { getCollection } from "astro:content";

import BaseLayout from "../layout/BaseLayout.astro";
import Screenshots from "../components/Screenshots.astro";
import IconLink from "../components/IconLink.astro";
import Tags from "../components/Tags.astro";
import Embed from "../components/Embed.astro";

const blog = (await getCollection("blog")).filter(
  ({ id }) => !(import.meta.env.DRAFT_ARTICLES?.split(",") ?? []).includes(id)
);

const projects = (await getCollection("projects"))
  .sort(({ slug }) =>
    (import.meta.env.FEATURED_PROJECTS?.split(",") ?? []).includes(slug)
      ? -1
      : 1
  )
  .map((project) => {
    return {
      ...project,
      articles: project.data.articles
        ?.flatMap((articleID) =>
          blog.find((article) => article.id === articleID)
        )
        .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
    };
  });
---

<BaseLayout
  title="My Projects"
  description="Explore my projects showcasing my skills in iOS development, CI/CD automation, and more. Each project highlights my approach to clean, reliable code and production-ready solutions."
>
  <Embed kind="github-sponsors" />

  {
    projects.map(
      ({ data: { title, tags, links }, articles, slug, rendered }, index) => (
        <section id={slug} class="card flex flex-col gap-4">
          <div class="flex flex-col gap-3 sm:flex-row sm:items-baseline">
            <h2 class="m-0">{title}</h2>

            <div class="flex items-center gap-2">
              {links?.map((link) => (
                <IconLink
                  type={link.type}
                  url={link.url}
                  loading={index === 0 ? "eager" : "lazy"}
                />
              ))}
            </div>
          </div>

          <Tags tags={tags} />

          <div
            class="prose dark:prose-invert max-w-none sm:text-justify"
            set:html={rendered?.html}
          />

          {articles && articles.length > 0 && (
            <div class="flex flex-col gap-2">
              <h3>Related Articles</h3>
              {articles.map((article) => (
                <a
                  href={`/blog/${article.id}`}
                  class="block p-3 border rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition"
                >
                  <div>{article.data.title}</div>
                  <div class="text-sm text-secondary line-clamp-1">
                    {article.data.description}
                  </div>
                  <div class="text-xs text-muted text-right">
                    {article.data.date.toLocaleDateString()}
                  </div>
                </a>
              ))}
            </div>
          )}

          <Screenshots slug={slug} />
        </section>
      )
    )
  }
</BaseLayout>
